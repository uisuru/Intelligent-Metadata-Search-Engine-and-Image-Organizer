/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import CLS_Main.Internet;
import CLS_Main.MetaData_Extractor;
import CLS_Main.MoveFile;
import CLS_Main.getGioCode;
import static CLS_Main.getGioCode.address;
import CLS_Main.image_data_from_database;
import CLS_Main.image_data_to_database;
import java.io.File;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.SwingWorker;

/**
 *
 * @author Isuru
 */
public class File_Org extends javax.swing.JFrame {

    public static ArrayList<String> result;
    public static Find_images_from_image_finder find_images_based_on_path_and_pattern;
    public static Find_images_from_MetaData_Extractor metaData_from_basic_functions;
    public static Index_Path index_path;
    img_Viewer img_Viewer = new img_Viewer();
    Process start;

    /**
     * Creates new form File_Org
     */
    public File_Org() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jCom_format = new javax.swing.JComboBox();
        jBu_indexing = new javax.swing.JButton();
        jBu_browse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTe_address = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTe_file_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDa_crate = new com.toedter.calendar.JDateChooser();
        jSl_size = new javax.swing.JSlider();
        jCo_data_size = new javax.swing.JComboBox();
        jTe_size = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCo_size_plu_min = new javax.swing.JComboBox();
        jSp_reso_w_jpg = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jCo_reso_pu_mi_jpg = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jTe_Coun = new javax.swing.JTextField();
        jTe_city = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jBu_Search = new javax.swing.JButton();
        jBu_Move = new javax.swing.JButton();
        jRa_loc = new javax.swing.JRadioButton();
        jRa_FileName = new javax.swing.JRadioButton();
        jRa_Size = new javax.swing.JRadioButton();
        jRa_Res = new javax.swing.JRadioButton();
        jRa_Date = new javax.swing.JRadioButton();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jProgressBar1 = new javax.swing.JProgressBar();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jBu_browse1 = new javax.swing.JButton();
        jTe_address1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        jFileChooser1.setDialogTitle("Select Location");
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        jFileChooser1.setToolTipText("");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("File Orgenizer");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCom_format.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "*.jpg", "*.jpeg", "*.png", "*.gif", "*.tif" }));
        jCom_format.setSelectedIndex(1);
        jCom_format.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCom_formatItemStateChanged(evt);
            }
        });
        jCom_format.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCom_formatActionPerformed(evt);
            }
        });
        jPanel1.add(jCom_format, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 90, 30));

        jBu_indexing.setText("Index Path");
        jBu_indexing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBu_indexingActionPerformed(evt);
            }
        });
        jPanel1.add(jBu_indexing, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 100, 30));

        jBu_browse.setText("Browse");
        jBu_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBu_browseActionPerformed(evt);
            }
        });
        jPanel1.add(jBu_browse, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, 100, 30));

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 270, 290));

        jTe_address.setText("H:\\");
            jTe_address.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTe_addressCaretUpdate(evt);
                }
            });
            jTe_address.addInputMethodListener(new java.awt.event.InputMethodListener() {
                public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                    jTe_addressInputMethodTextChanged(evt);
                }
                public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                }
            });
            jTe_address.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTe_addressActionPerformed(evt);
                }
            });
            jPanel1.add(jTe_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 330, 30));

            jLabel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Result - Images Path"));
            jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 290, 320));

            jLabel3.setText("File Name : -");
            jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, -1));

            jTe_file_name.addCaretListener(new javax.swing.event.CaretListener() {
                public void caretUpdate(javax.swing.event.CaretEvent evt) {
                    jTe_file_nameCaretUpdate(evt);
                }
            });
            jTe_file_name.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTe_file_nameActionPerformed(evt);
                }
            });
            jPanel1.add(jTe_file_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 300, 30));

            jLabel5.setText("File Size : -");
            jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

            jLabel7.setText("Date : -");
            jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, 30));

            jDa_crate.setDateFormatString("yyyy:MM:dd");
            jPanel1.add(jDa_crate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 160, 30));

            jSl_size.setMaximum(1024);
            jSl_size.setToolTipText("");
            jSl_size.setValue(0);
            jSl_size.addChangeListener(new javax.swing.event.ChangeListener() {
                public void stateChanged(javax.swing.event.ChangeEvent evt) {
                    jSl_sizeStateChanged(evt);
                }
            });
            jPanel1.add(jSl_size, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 140, -1));

            jCo_data_size.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Byte", "KB", "MB", "GB" }));
            jCo_data_size.setSelectedIndex(2);
            jPanel1.add(jCo_data_size, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, -1, -1));

            jTe_size.setText("0");
            jTe_size.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    jTe_sizeKeyReleased(evt);
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    jTe_sizeKeyTyped(evt);
                }
            });
            jPanel1.add(jTe_size, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 40, -1));

            jLabel4.setText(" +/-");
            jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 20, 20));

            jCo_size_plu_min.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "20", "25" }));
            jCo_size_plu_min.setToolTipText("+ or - value");
            jCo_size_plu_min.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCo_size_plu_minActionPerformed(evt);
                }
            });
            jPanel1.add(jCo_size_plu_min, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));
            jPanel1.add(jSp_reso_w_jpg, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 60, -1));

            jLabel11.setText("Resolution : -");
            jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, 20));

            jLabel15.setText("px");
            jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 150, 20, 20));

            jLabel13.setText("+/-");
            jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, 20));

            jCo_reso_pu_mi_jpg.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "20", "25" }));
            jCo_reso_pu_mi_jpg.setToolTipText("+ or - value");
            jCo_reso_pu_mi_jpg.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jCo_reso_pu_mi_jpgActionPerformed(evt);
                }
            });
            jPanel1.add(jCo_reso_pu_mi_jpg, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 40, -1));

            jLabel18.setText("Location : -");
            jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, 20));

            jLabel31.setText("City:");
            jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 30, 20));

            jLabel30.setText("Country:");
            jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 50, 20));

            jTe_Coun.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTe_CounActionPerformed(evt);
                }
            });
            jPanel1.add(jTe_Coun, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 110, -1));

            jTe_city.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTe_cityActionPerformed(evt);
                }
            });
            jPanel1.add(jTe_city, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 110, -1));

            jLabel50.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
            jLabel50.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Location Result for City and Country", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 8))); // NOI18N
            jPanel1.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 150, 90));

            jBu_Search.setText("Search");
            jBu_Search.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jBu_SearchActionPerformed(evt);
                }
            });
            jPanel1.add(jBu_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 330, 140, 30));

            jBu_Move.setText("Move Images");
            jBu_Move.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jBu_MoveActionPerformed(evt);
                }
            });
            jPanel1.add(jBu_Move, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, -1, 30));

            buttonGroup1.add(jRa_loc);
            jPanel1.add(jRa_loc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, 40));

            buttonGroup1.add(jRa_FileName);
            jRa_FileName.setSelected(true);
            jRa_FileName.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRa_FileNameActionPerformed(evt);
                }
            });
            jPanel1.add(jRa_FileName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 30));

            buttonGroup1.add(jRa_Size);
            jPanel1.add(jRa_Size, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 30));

            buttonGroup1.add(jRa_Res);
            jPanel1.add(jRa_Res, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 20));

            buttonGroup1.add(jRa_Date);
            jPanel1.add(jRa_Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 30));

            jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jToolBar1.setFloatable(false);

            jLabel1.setText("                                                 ");
            jLabel1.setPreferredSize(new java.awt.Dimension(600, 14));
            jToolBar1.add(jLabel1);
            jToolBar1.add(jSeparator1);

            jProgressBar1.setMaximumSize(new java.awt.Dimension(146, 20));
            jProgressBar1.setMinimumSize(new java.awt.Dimension(10, 0));
            jProgressBar1.setPreferredSize(new java.awt.Dimension(146, 146));
            jToolBar1.add(jProgressBar1);
            jToolBar1.add(jSeparator2);

            jPanel1.add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 730, 30));

            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Width", "Hight" }));
            jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, -1, -1));

            jLabel2.setText("Format = yyyy:MM:dd");
            jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, 30));

            jBu_browse1.setText("Browse");
            jBu_browse1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jBu_browse1ActionPerformed(evt);
                }
            });
            jPanel1.add(jBu_browse1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, 100, 30));

            jTe_address1.setText("H:\\");
                jTe_address1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jTe_address1ActionPerformed(evt);
                    }
                });
                jPanel1.add(jTe_address1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, 420, 30));

                jLabel8.setText("Moving Path :-");
                jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 130, 30));

                jCheckBox1.setText("All Path");
                jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jCheckBox1ActionPerformed(evt);
                    }
                });
                jPanel1.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

                getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 460));

                pack();
                setLocationRelativeTo(null);
            }// </editor-fold>//GEN-END:initComponents

    private void jCom_formatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCom_formatItemStateChanged

    }//GEN-LAST:event_jCom_formatItemStateChanged

    private void jCom_formatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCom_formatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCom_formatActionPerformed

    private void jBu_indexingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBu_indexingActionPerformed
//Worker find_images_based_on_path_and_pattern = new Find_images_from_image_finder();
        jLabel1.setText("Indexing...");
        jProgressBar1.setValue(0);
//        metaData_from_basic_functions = new Find_images_from_MetaData_Extractor();
//        metaData_from_basic_functions.execute();
        find_images_based_on_path_and_pattern = new Find_images_from_image_finder();
        find_images_based_on_path_and_pattern.execute();
        while (!find_images_based_on_path_and_pattern.isDone()) {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(File_Org.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        index_path = new Index_Path();
        index_path.execute();
        while (!index_path.isDone()) {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(File_Org.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jLabel1.setText("Indexing process completed...");
    }//GEN-LAST:event_jBu_indexingActionPerformed

    private void jBu_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBu_browseActionPerformed
        int returnValue = jFileChooser1.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jFileChooser1.getSelectedFile();
//            System.out.println(selectedFile.getName());//Folder Name
//            System.out.println(selectedFile.getAbsolutePath());//C:\Users\Isuru\Documents\CodeBlocks
            jTe_address.setText(selectedFile.getAbsolutePath());
            jTe_address1.setText(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jBu_browseActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked

    }//GEN-LAST:event_jList1MouseClicked

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged

    }//GEN-LAST:event_jList1ValueChanged

    private void jTe_addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTe_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTe_addressActionPerformed

    private void jTe_file_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTe_file_nameActionPerformed

    }//GEN-LAST:event_jTe_file_nameActionPerformed

    private void jSl_sizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSl_sizeStateChanged
        jTe_size.setText("" + jSl_size.getValue());
    }//GEN-LAST:event_jSl_sizeStateChanged

    private void jTe_sizeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTe_sizeKeyReleased
        try {
            jSl_size.setValue(Integer.parseInt(jTe_size.getText()));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jTe_sizeKeyReleased

    private void jTe_sizeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTe_sizeKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        } else if (!(Integer.parseInt(jTe_size.getText() + evt.getKeyChar()) >= 0 && Integer.parseInt(jTe_size.getText() + evt.getKeyChar()) <= 1024)) {
            evt.consume();
        }
    }//GEN-LAST:event_jTe_sizeKeyTyped

    private void jCo_size_plu_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCo_size_plu_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCo_size_plu_minActionPerformed

    private void jTe_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTe_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTe_cityActionPerformed

    private void jTe_CounActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTe_CounActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTe_CounActionPerformed

    private void jCo_reso_pu_mi_jpgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCo_reso_pu_mi_jpgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCo_reso_pu_mi_jpgActionPerformed

    private void jBu_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBu_SearchActionPerformed
        try {
            String quary, max, min, max_h, max_w, min_h, min_w, date, WH, Range;
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy:MM:dd");
            try {
                date = simpleDateFormat.format(File_Org.jDa_crate.getDate());
            } catch (Exception e) {
                date = "";
            }
            quary = "select path from data where ";
            if (jRa_FileName.isSelected()) {
                if (!jTe_file_name.getText().equals("")) {
                    quary = quary + "file_name like '%" + jTe_file_name.getText() + "%' ";
                }
            } else if (jRa_Size.isSelected()) {
                if (!jTe_size.getText().equals("") && !jTe_size.getText().equals("0")) {
                    jTe_address1.setText(jTe_address.getText() + "\\" + jTe_size.getText());
                    int minf;
                    try {
                        minf = Integer.parseInt(jTe_size.getText());
                    } catch (Exception e) {
                        minf = 0;
                    }
                    switch (jCo_data_size.getSelectedItem().toString()) {
                        case "GB":
                            minf = minf * 1024 * 1024 * 1024;
                            break;
                        case "MB":
                            minf = minf * 1024 * 1024;
                            break;
                        case "KB":
                            minf = minf * 1024;
                            break;
                    }
                    min = "" + (minf - (minf / 100) * Integer.parseInt(jCo_size_plu_min.getSelectedItem().toString()));
                    max = "" + (minf + (minf / 100) * Integer.parseInt(jCo_size_plu_min.getSelectedItem().toString()));
                    quary = quary.concat("file_size BETWEEN " + min + " AND " + max + " ");
                }
            } else if (jRa_Date.isSelected()) {
                if (!date.equals("")) {
                    jTe_address1.setText(jTe_address.getText() + "\\" + date);
                    quary = quary + "Date_Time like '%" + date.replaceAll(":", " ") + "%' ";
                }
            } else if (jRa_Res.isSelected()) {
                try {
                    WH = jSp_reso_w_jpg.getValue().toString();
                } catch (Exception e) {
                    WH = "0";
                }
                if (!WH.equals("")) {
                    jTe_address1.setText(jTe_address.getText() + "\\" + WH);
                    Range = jCo_reso_pu_mi_jpg.getSelectedItem().toString();
                    min = "" + (Integer.parseInt(WH) - ((Integer.parseInt(WH) / 100) * Integer.parseInt(Range)));
                    max = "" + (Integer.parseInt(WH) + ((Integer.parseInt(WH) / 100) * Integer.parseInt(Range)));
                    if (jComboBox1.getSelectedIndex() == 0) {
                        quary = quary + "Image_Width between " + min + " and " + max + " ";
                    } else {
                        quary = quary + "Image_Height between " + min + " and " + max + " ";
                    }
                }
            } else if (jRa_loc.isSelected()) {
                if (!jTe_city.getText().equals("") || !jTe_Coun.getText().equals("")) {
                    jTe_address1.setText(jTe_address.getText() + "\\" + jTe_city.getText() + jTe_Coun.getText());
                    if (Internet.isAvailable()) {
                        double[] gioCode = getGioCode.getGioCode(jTe_city.getText() + " " + jTe_Coun.getText());
                        double maxlat, minlat, maxlng, minlng;
                        if (gioCode[0] > gioCode[2]) {
                            maxlat = gioCode[0];
                            minlat = gioCode[2];
                        } else {
                            maxlat = gioCode[2];
                            minlat = gioCode[0];
                        }
                        if (gioCode[1] > gioCode[3]) {
                            maxlng = gioCode[1];
                            minlng = gioCode[3];
                        } else {
                            maxlng = gioCode[3];
                            minlng = gioCode[1];
                        }
                        quary = quary + "GPS_Longitude between " + minlng + " and " + maxlng + " and GPS_Latitude between "
                                + minlat + " and " + maxlat + " ";
                        String s = "";
                        for (int i = 0; i < address.length && i < 4; i++) {
                            s = s + address[i].longName + "<br>";
                        }
                        jLabel50.setText("<html>" + s + "</html>");
                    } else {
                        jLabel50.setText("No internet Connection..");
                    }
                }
            }
            //###########
            if (quary.equals("select path from data where ")) {
                quary = "select path from data";
            }
            System.out.println(quary);
            if (jCheckBox1.isSelected()) {
                ArrayList<String> get = image_data_from_database.get(quary, true);
            } else {
                ArrayList<String> get = image_data_from_database.get(quary, false);
            }
        } catch (/*ParseException | SQLException*/Exception ex) {
            Logger.getLogger(File_Org.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBu_SearchActionPerformed

    private void jBu_MoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBu_MoveActionPerformed
        ListModel model = jList1.getModel();
        for (int i = 0; i < model.getSize(); i++) {
            if (!MoveFile.move((String) model.getElementAt(i), jTe_address1.getText())) {
                break;
            }
        }
        JOptionPane.showMessageDialog(rootPane, "File moving is complete", "Move", JOptionPane.INFORMATION_MESSAGE, null);
        jLabel1.setText("File moving is complete");
    }//GEN-LAST:event_jBu_MoveActionPerformed

    private void jBu_browse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBu_browse1ActionPerformed
        int returnValue = jFileChooser1.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jFileChooser1.getSelectedFile();
//            System.out.println(selectedFile.getName());//Folder Name
//            System.out.println(selectedFile.getAbsolutePath());//C:\Users\Isuru\Documents\CodeBlocks
            jTe_address1.setText(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jBu_browse1ActionPerformed

    private void jTe_address1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTe_address1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTe_address1ActionPerformed

    private void jTe_addressInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTe_addressInputMethodTextChanged

    }//GEN-LAST:event_jTe_addressInputMethodTextChanged

    private void jRa_FileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRa_FileNameActionPerformed
        jTe_address1.setText(jTe_address.getText()+"\\"+jTe_file_name.getText());
    }//GEN-LAST:event_jRa_FileNameActionPerformed

    private void jTe_addressCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTe_addressCaretUpdate
         jTe_address1.setText(jTe_address.getText());
    }//GEN-LAST:event_jTe_addressCaretUpdate

    private void jTe_file_nameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTe_file_nameCaretUpdate
         jTe_address1.setText(jTe_address.getText()+"\\"+jTe_file_name.getText());
    }//GEN-LAST:event_jTe_file_nameCaretUpdate

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            jTe_address.setEnabled(false);
            jTe_address.setText("ALL");
            jTe_address1.setText("C:/");
            jBu_browse.setEnabled(false);
            jBu_indexing.setEnabled(false);
        } else {
            jTe_address.setEnabled(true);
            jTe_address.setText("C:/");
            jBu_browse.setEnabled(true);
            jBu_indexing.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(File_Org.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 

catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(File_Org.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 

catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(File_Org.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 

catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(File_Org.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new File_Org().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBu_Move;
    private javax.swing.JButton jBu_Search;
    public static javax.swing.JButton jBu_browse;
    public static javax.swing.JButton jBu_browse1;
    public static javax.swing.JButton jBu_indexing;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JComboBox jCo_data_size;
    public static javax.swing.JComboBox jCo_reso_pu_mi_jpg;
    public static javax.swing.JComboBox jCo_size_plu_min;
    public static javax.swing.JComboBox jCom_format;
    private javax.swing.JComboBox jComboBox1;
    public static com.toedter.calendar.JDateChooser jDa_crate;
    private javax.swing.JFileChooser jFileChooser1;
    public static javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    public static javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRa_Date;
    private javax.swing.JRadioButton jRa_FileName;
    private javax.swing.JRadioButton jRa_Res;
    private javax.swing.JRadioButton jRa_Size;
    private javax.swing.JRadioButton jRa_loc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JSlider jSl_size;
    private javax.swing.JSpinner jSp_reso_w_jpg;
    private javax.swing.JTextField jTe_Coun;
    public static javax.swing.JTextField jTe_address;
    public static javax.swing.JTextField jTe_address1;
    private javax.swing.JTextField jTe_city;
    public static javax.swing.JTextField jTe_file_name;
    public static javax.swing.JTextField jTe_size;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}

class Find_images_from_MetaData_Extractor2 extends SwingWorker<Void, String> {

    @Override
    protected Void doInBackground() throws Exception {
        //here you make heavy task this is running in another thread not in EDT
        try {
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy MMM dd");
            String s;
            try {
                s = simpleDateFormat.format(File_Org.jDa_crate.getDate());
            } catch (Exception e) {
                s = "";
            }
            int size = Integer.parseInt(File_Org.jTe_size.getText());
            if ("KB".equals(File_Org.jCo_data_size.getSelectedItem().toString())) {
                size *= 1024;
            } else if ("MB".equals(File_Org.jCo_data_size.getSelectedItem().toString())) {
                size *= 1024 * 1024;
            } else if ("GB".equals(File_Org.jCo_data_size.getSelectedItem().toString())) {
                size *= 1024 * 1024 * 1024;
            }
            int val = Integer.parseInt(File_Org.jCo_size_plu_min.getSelectedItem().toString());
            int min = size - ((size / 100) * val);
            int max = size + ((size / 100) * val);
            MetaData_Extractor.metaData_from_basic_functions(File_Org.result, File_Org.jTe_file_name.getText(), false, s, max, min);
        } catch (SQLException ex) {
            Logger.getLogger(File_Org.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException e) {
        }
        return null;
    }

    @Override
    protected void done() {
        //System.out.println("####################Done################");
    }
}

class Index_Path2 extends SwingWorker<Void, String> {

    @Override
    protected Void doInBackground() throws Exception {
        //here you make heavy task this is running in another thread not in EDT
        try {
            image_data_to_database.set(File_Org.result);
        } catch (ParseException | SQLException ex) {
            Logger.getLogger(File_Org.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    @Override
    protected void done() {
        //System.out.println("####################Done################");
    }
}
